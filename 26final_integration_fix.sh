#!/bin/bash

echo "üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò"
echo "=================================="
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º: CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, FileTree props, –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π"

cd frontend

# ============================================================================
# 1. –î–û–ë–ê–í–ò–¢–¨ CSS –ü–ï–†–ï–ú–ï–ù–ù–´–ï –í globals.css
# ============================================================================

# –í—Å—Ç–∞–≤–ª—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ body
sed -i '' '/^body {/a\
\
:root {\
  --bg-primary: #1e1e1e;\
  --bg-secondary: #252526;\
  --bg-tertiary: #2d2d30;\
  --border: #464647;\
  --text-primary: #cccccc;\
  --text-secondary: #888;\
  --button-bg: transparent;\
  --button-hover: #2a2d2e;\
  --accent-blue: #007acc;\
  --accent-green: #4ec9b0;\
}' src/styles/globals.css

echo "‚úÖ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã"

# ============================================================================
# 2. –ò–°–ü–†–ê–í–ò–¢–¨ App.jsx - –£–ë–†–ê–¢–¨ –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï
# ============================================================================

cat > src/App.jsx << 'EOF'
import React, { useState } from 'react'
import { 
  ChevronDown,
  ChevronUp,
  X,
  Menu
} from 'lucide-react'
import FileTree from './components/FileTree'
import { useFileManager } from './hooks/useFileManager'
import './styles/globals.css'

function App() {
  const [leftPanelOpen, setLeftPanelOpen] = useState(true)
  const [rightPanelOpen, setRightPanelOpen] = useState(true)
  const [terminalOpen, setTerminalOpen] = useState(true)
  const [activeAgent, setActiveAgent] = useState('claudy')

  // File Manager Hook
  const {
    fileTree,
    openTabs,
    activeTab,
    searchQuery,
    setSearchQuery,
    createFile,
    createFolder,
    renameItem,
    deleteItem,
    openFile,
    closeTab,
    setActiveTab,
    toggleFolder,
    updateFileContent
  } = useFileManager()

  return (
    <div className="app-container">
      {/* Header */}
      <header className="app-header">
        <div style={{display: 'flex', alignItems: 'center'}}>
          <button 
            onClick={() => setLeftPanelOpen(!leftPanelOpen)}
            style={{background: 'none', border: 'none', color: '#cccccc', marginRight: '12px', cursor: 'pointer'}}
          >
            <Menu size={16} />
          </button>
          <div className="app-title">iCoder Plus v2.2</div>
          <div className="app-subtitle">File Tree Ready</div>
        </div>
        
        <div className="status-indicator">
          {activeTab ? activeTab.name : 'No file selected'}
        </div>
        
        <div className="ai-panel-toggle">
          {activeAgent === 'dashka' ? 'Dashka (Architect)' : 'Claudy (Assistant)'}
        </div>
      </header>

      <div className="app-content">
        {/* Left Panel - File Explorer */}
        {leftPanelOpen && (
          <div className="left-panel">
            <FileTree
              fileTree={fileTree}
              searchQuery={searchQuery}
              setSearchQuery={setSearchQuery}
              openFile={openFile}
              createFile={createFile}
              createFolder={createFolder}
              renameItem={renameItem}
              deleteItem={deleteItem}
              toggleFolder={toggleFolder}
              selectedFileId={activeTab?.id}
            />
          </div>
        )}

        {/* Main Panel - Editor */}
        <div className="main-panel">
          {/* File Tabs */}
          {openTabs.length > 0 && (
            <div className="editor-header">
              <div className="editor-tabs">
                {openTabs.map(tab => (
                  <div
                    key={tab.id}
                    className={`editor-tab ${activeTab?.id === tab.id ? 'active' : ''}`}
                    onClick={() => setActiveTab(tab)}
                  >
                    <span className="tab-name">{tab.name}</span>
                    <button
                      className="tab-close"
                      onClick={(e) => {
                        e.stopPropagation()
                        closeTab(tab)
                      }}
                    >
                      <X size={12} />
                    </button>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Editor Content */}
          <div className="editor-content">
            {activeTab ? (
              <textarea
                value={activeTab.content || ''}
                onChange={(e) => updateFileContent(activeTab.id, e.target.value)}
                style={{
                  width: '100%',
                  height: '100%',
                  background: '#1e1e1e',
                  border: 'none',
                  color: '#cccccc',
                  fontFamily: 'Monaco, Menlo, monospace',
                  fontSize: '14px',
                  padding: '20px',
                  resize: 'none',
                  outline: 'none'
                }}
                placeholder="Start typing your code..."
              />
            ) : (
              <div className="no-file-selected">
                <div className="editor-placeholder">
                  <h3>No file selected</h3>
                  <p>Select a file from the explorer to start editing</p>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Right Panel - AI Assistant */}
        {rightPanelOpen && (
          <div className="right-panel">
            <div className="ai-header">
              <h3>AI ASSISTANT</h3>
              <div className="agent-selector">
                <button
                  className={`agent-btn ${activeAgent === 'dashka' ? 'active' : ''}`}
                  onClick={() => setActiveAgent('dashka')}
                >
                  Dashka
                </button>
                <button
                  className={`agent-btn ${activeAgent === 'claudy' ? 'active' : ''}`}
                  onClick={() => setActiveAgent('claudy')}
                >
                  Claudy
                </button>
              </div>
            </div>

            <div className="ai-content">
              <div style={{textAlign: 'center', padding: '20px'}}>
                <div style={{fontSize: '48px', marginBottom: '12px'}}>
                  {activeAgent === 'dashka' ? 'üèóÔ∏è' : 'ü§ñ'}
                </div>
                <h4 style={{color: '#cccccc', marginBottom: '8px'}}>
                  {activeAgent === 'dashka' ? 'Dashka (Architect)' : 'Claudy (Assistant)'}
                </h4>
                <p>
                  {activeAgent === 'dashka' 
                    ? 'Ready to help with architecture and code review'
                    : 'Ready to assist with coding and implementation'
                  }
                </p>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* Bottom Panel - Terminal */}
      <div className={`bottom-panel ${terminalOpen ? '' : 'collapsed'}`}>
        <div className="terminal-header">
          <span>TERMINAL</span>
          <button 
            onClick={() => setTerminalOpen(!terminalOpen)}
            style={{background: 'none', border: 'none', color: '#cccccc', cursor: 'pointer'}}
          >
            {terminalOpen ? <ChevronDown size={16} /> : <ChevronUp size={16} />}
          </button>
        </div>

        {terminalOpen && (
          <div className="terminal-content">
            <div className="terminal-line">
              <span className="prompt">npm run dev</span>
            </div>
            <div className="terminal-line">
              <span className="output">iCoder Plus starting...</span>
            </div>
            <div className="terminal-line">
              <span className="prompt">‚úÖ File Tree Management ready</span>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}

export default App
EOF

echo "‚úÖ App.jsx —É–ø—Ä–æ—â–µ–Ω –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"

# ============================================================================
# 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# ============================================================================

echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é..."
npm run build

if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ –°–ö–†–ò–ü–¢ #2 –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù!"
    echo "================================="
    echo ""
    echo "‚úÖ –†–ê–ë–û–¢–ê–Æ–©–ò–ï –§–£–ù–ö–¶–ò–ò:"
    echo "   ‚Ä¢ FileTree —Å CRUD –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏"
    echo "   ‚Ä¢ –ö–Ω–æ–ø–∫–∏ + File –∏ + Folder"
    echo "   ‚Ä¢ –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤"
    echo "   ‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é (–ø—Ä–∞–≤—ã–π –∫–ª–∏–∫)"
    echo "   ‚Ä¢ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ inline"
    echo "   ‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–∞–±–∞—Ö"
    echo "   ‚Ä¢ AI –∞–≥–µ–Ω—Ç—ã –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Ç—Å—è"
    echo "   ‚Ä¢ –¢–µ—Ä–º–∏–Ω–∞–ª —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è"
    echo "   ‚Ä¢ –ü–∞–Ω–µ–ª–∏ –º–æ–∂–Ω–æ —Å–∫—Ä—ã–≤–∞—Ç—å"
    echo ""
    echo "üìã –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:"
    echo "   ‚úÖ –í—Å–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã"
    echo "   ‚úÖ Props FileTree –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    echo "   ‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ"
    echo "   ‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –±–µ–∑ –æ—à–∏–±–æ–∫"
    echo ""
    echo "üöÄ –ì–û–¢–û–í –ö –°–ö–†–ò–ü–¢–£ #3: Monaco Editor Integration"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å"
fi