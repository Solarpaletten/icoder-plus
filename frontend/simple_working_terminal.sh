#!/bin/bash

echo "üîß –ü–†–û–°–¢–û–ô –†–ê–ë–û–ß–ò–ô –¢–ï–†–ú–ò–ù–ê–õ"
echo "=========================="
echo "–°–æ–∑–¥–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é –±–µ–∑ –ª–∏—à–Ω–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"

# –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
cat > src/components/SimpleTerminal.tsx << 'EOF'
import { useEffect, useRef, useState } from 'react';
import { Terminal } from '@xterm/xterm';
import { FitAddon } from '@xterm/addon-fit';
import '@xterm/xterm/css/xterm.css';

interface SimpleTerminalProps {
  isVisible: boolean;
  height: number;
}

export function SimpleTerminal({ isVisible, height }: SimpleTerminalProps) {
  const terminalRef = useRef<HTMLDivElement>(null);
  const xtermRef = useRef<Terminal | null>(null);
  const wsRef = useRef<WebSocket | null>(null);
  const [status, setStatus] = useState('connecting');

  useEffect(() => {
    if (!terminalRef.current || !isVisible) return;

    // –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const terminal = new Terminal({
      cursorBlink: true,
      fontSize: 14,
      fontFamily: 'monospace',
      theme: {
        background: '#000000',
        foreground: '#ffffff',
        cursor: '#ffffff'
      }
    });

    const fitAddon = new FitAddon();
    terminal.loadAddon(fitAddon);
    
    terminal.open(terminalRef.current);
    xtermRef.current = terminal;
    
    fitAddon.fit();
    
    terminal.writeln('Connecting to terminal...');

    // –ü—Ä–æ—Å—Ç–æ–µ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const ws = new WebSocket('ws://localhost:3000/terminal');
    wsRef.current = ws;

    ws.onopen = () => {
      setStatus('connected');
      terminal.clear();
      terminal.writeln('Connected! Type commands:');
      terminal.focus();
    };

    ws.onmessage = (event) => {
      terminal.write(event.data);
    };

    ws.onclose = () => {
      setStatus('disconnected');
      terminal.writeln('\r\nDisconnected');
    };

    ws.onerror = () => {
      setStatus('error');
      terminal.writeln('\r\nConnection error');
    };

    // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
    terminal.onData((data) => {
      if (ws.readyState === WebSocket.OPEN) {
        ws.send(data);
      }
    });

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–∫—É—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤
    setTimeout(() => {
      terminal.focus();
      if (terminalRef.current) {
        terminalRef.current.click();
        terminalRef.current.focus();
      }
    }, 500);

    return () => {
      ws.close();
      terminal.dispose();
    };
  }, [isVisible]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
  const handleClick = () => {
    if (xtermRef.current) {
      xtermRef.current.focus();
    }
  };

  return (
    <div className="h-full flex flex-col bg-black">
      {/* –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç—É—Å */}
      <div className="p-2 bg-gray-800 text-white text-sm">
        Status: {status} - Click terminal and type
        <button 
          onClick={handleClick}
          className="ml-4 px-2 py-1 bg-blue-600 text-white rounded text-xs"
        >
          Focus
        </button>
      </div>
      
      {/* –¢–µ—Ä–º–∏–Ω–∞–ª */}
      <div 
        ref={terminalRef} 
        className="flex-1"
        onClick={handleClick}
        style={{ height: `${height - 50}px` }}
      />
    </div>
  );
}
EOF

echo "‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª —Å–æ–∑–¥–∞–Ω"

# –û–±–Ω–æ–≤–∏—Ç—å Terminal.tsx –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
cat > src/components/Terminal.tsx << 'EOF'
import { SimpleTerminal } from './SimpleTerminal';

interface TerminalProps {
  isVisible?: boolean;
  height?: number;
}

export function Terminal({ isVisible = true, height = 200 }: TerminalProps) {
  return <SimpleTerminal isVisible={isVisible} height={height} />;
}
EOF

echo "‚úÖ Terminal.tsx –æ–±–Ω–æ–≤–ª–µ–Ω"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –≥–æ—Ç–æ–≤!"
    echo "üéØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω:"
    echo "   ‚Ä¢ –£–±—Ä–∞–Ω—ã –≤—Å–µ —Å–ª–æ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    echo "   ‚Ä¢ –ü—Ä—è–º–æ–µ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    echo "   ‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–∫—É—Å"
    echo "   ‚Ä¢ –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞"
    echo ""
    echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–ª–∏–∫–Ω—É—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É"
else
    echo "‚ùå –û—à–∏–±–∫–∏ —Å–±–æ—Ä–∫–∏"
fi