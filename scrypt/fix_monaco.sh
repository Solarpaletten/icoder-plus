#!/bin/bash

cd frontend

echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å Monaco Editor..."

# 1. –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú MONACO EDITOR
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º @monaco-editor/react..."
npm install @monaco-editor/react monaco-editor

# 2. –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –ò–ó VITE.CONFIG
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
npm install diff2html

# 3. –û–ë–ù–û–í–õ–Ø–ï–ú PACKAGE.JSON –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ó–ê–í–ò–°–ò–ú–û–°–¢–Ø–ú–ò
cat > package.json << 'EOF'
{
  "name": "icoder-plus-frontend",
  "version": "2.0.0",
  "type": "module",
  "description": "iCoder Plus Frontend - AI-first IDE UI in React",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "lint": "eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext js,jsx --fix"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "axios": "^1.6.2",
    "clsx": "^2.0.0",
    "lucide-react": "^0.294.0",
    "@monaco-editor/react": "^4.6.0",
    "monaco-editor": "^0.44.0",
    "diff2html": "^3.4.48"
  },
  "devDependencies": {
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@vitejs/plugin-react": "^4.1.1",
    "autoprefixer": "^10.4.21",
    "eslint": "^8.53.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "vite": "^5.0.0"
  },
  "keywords": [
    "react",
    "vite",
    "tailwind",
    "ide",
    "ai",
    "code-editor",
    "bottom-sheet",
    "monaco-editor"
  ],
  "author": "Solar IT Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
EOF

# 4. –°–û–ó–î–ê–ï–ú –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–£–Æ –í–ï–†–°–ò–Æ VITE.CONFIG.JS
cat > vite.config.js << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import { resolve } from 'path'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': resolve(__dirname, './src'),
      '@components': resolve(__dirname, './src/components'),
      '@services': resolve(__dirname, './src/services'),
      '@utils': resolve(__dirname, './src/utils'),
      '@hooks': resolve(__dirname, './src/hooks')
    }
  },
  server: {
    port: 5173,
    host: true,
    open: true,
    proxy: {
      // –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞—Ç—å API –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ backend
      '/api': {
        target: 'http://localhost:3000',
        changeOrigin: true,
        secure: false
      }
    }
  },
  build: {
    outDir: 'dist',
    sourcemap: true,
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['react', 'react-dom'],
          // Monaco Editor –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —á–∞–Ω–∫–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
          editor: ['monaco-editor', '@monaco-editor/react'],
          utils: ['diff2html', 'clsx', 'axios']
        }
      }
    }
  },
  optimizeDeps: {
    include: [
      'react', 
      'react-dom', 
      'lucide-react', 
      'axios',
      // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Monaco
      'monaco-editor/esm/vs/language/typescript/ts.worker',
      'monaco-editor/esm/vs/language/json/json.worker',
      'monaco-editor/esm/vs/editor/editor.worker'
    ]
  },
  define: {
    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    __APP_VERSION__: JSON.stringify(process.env.npm_package_version)
  },
  worker: {
    format: 'es'
  }
})
EOF

# 5. –°–û–ó–î–ê–ï–ú –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ MONACO (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê)
mkdir -p src/components

cat > src/components/CodeEditor.jsx << 'EOF'
import React, { Suspense, lazy } from 'react';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç Monaco Editor –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ bundle
const MonacoEditor = lazy(() => 
  import('@monaco-editor/react').then(module => ({
    default: module.default || module.Editor
  }))
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
const EditorSkeleton = () => (
  <div className="w-full h-64 bg-gray-800 rounded-lg flex items-center justify-center">
    <div className="text-gray-400 animate-pulse">Loading Code Editor...</div>
  </div>
);

// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è Monaco —Å fallback
const CodeEditor = ({ 
  value = '', 
  language = 'javascript', 
  onChange, 
  theme = 'vs-dark',
  height = '300px',
  ...props 
}) => {
  const handleEditorChange = (newValue) => {
    if (onChange) {
      onChange(newValue || '');
    }
  };

  return (
    <Suspense fallback={<EditorSkeleton />}>
      <MonacoEditor
        height={height}
        language={language}
        value={value}
        theme={theme}
        onChange={handleEditorChange}
        options={{
          selectOnLineNumbers: true,
          roundedSelection: false,
          readOnly: false,
          cursorStyle: 'line',
          automaticLayout: true,
          minimap: { enabled: false },
          scrollBeyondLastLine: false,
          fontSize: 14,
          fontFamily: 'JetBrains Mono, Consolas, Monaco, monospace',
          ...props.options
        }}
        {...props}
      />
    </Suspense>
  );
};

export default CodeEditor;
EOF

# 6. –°–û–ó–î–ê–ï–ú –ü–†–û–°–¢–û–ô FALLBACK EDITOR (–µ—Å–ª–∏ Monaco –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è)
cat > src/components/SimpleEditor.jsx << 'EOF'
import React from 'react';

// –ü—Ä–æ—Å—Ç–æ–π textarea fallback, –µ—Å–ª–∏ Monaco Editor –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
const SimpleEditor = ({ 
  value = '', 
  onChange, 
  language = 'javascript',
  height = '300px',
  placeholder = 'Enter your code here...'
}) => {
  const handleChange = (e) => {
    if (onChange) {
      onChange(e.target.value);
    }
  };

  return (
    <textarea
      value={value}
      onChange={handleChange}
      placeholder={placeholder}
      style={{ height }}
      className="w-full bg-gray-900 text-green-400 font-mono p-4 rounded-lg border border-gray-700 focus:border-blue-500 focus:outline-none resize-none"
      spellCheck={false}
    />
  );
};

export default SimpleEditor;
EOF

# 7. –°–û–ó–î–ê–ï–ú –£–ú–ù–´–ô EDITOR WRAPPER
cat > src/components/SmartCodeEditor.jsx << 'EOF'
import React, { useState, useEffect } from 'react';
import CodeEditor from './CodeEditor';
import SimpleEditor from './SimpleEditor';

// –£–º–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±–∏—Ä–∞–µ—Ç Monaco –∏–ª–∏ fallback
const SmartCodeEditor = (props) => {
  const [useMonaco, setUseMonaco] = useState(true);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Monaco Editor
    const checkMonaco = async () => {
      try {
        await import('@monaco-editor/react');
        setUseMonaco(true);
      } catch (error) {
        console.warn('Monaco Editor not available, falling back to simple editor');
        setUseMonaco(false);
      } finally {
        setIsLoading(false);
      }
    };

    checkMonaco();
  }, []);

  if (isLoading) {
    return (
      <div className="w-full h-64 bg-gray-800 rounded-lg flex items-center justify-center">
        <div className="text-gray-400 animate-pulse">Initializing Editor...</div>
      </div>
    );
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Monaco –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–¥–∞–∫—Ç–æ—Ä
  return useMonaco ? <CodeEditor {...props} /> : <SimpleEditor {...props} />;
};

export default SmartCodeEditor;
EOF

# 8. –ü–ï–†–ï–£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ó–ê–í–ò–°–ò–ú–û–°–¢–ò
echo "üîÑ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
rm -rf node_modules package-lock.json
npm install

# 9. –¢–ï–°–¢–ò–†–£–ï–ú –°–ë–û–†–ö–£
echo "üî® –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä–∫—É..."
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ Frontend —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!"
    echo ""
    echo "üéØ Monaco Editor –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!"
    echo "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:"
    echo "   - CodeEditor (Monaco —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π)"
    echo "   - SimpleEditor (textarea fallback)"
    echo "   - SmartCodeEditor (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä)"
    echo ""
    echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å:"
    echo "   npm run dev"
else
    echo "‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ frontend"
fi